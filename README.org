* Meeting <2017-01-31 Tue>
** Learn Better Together
*** Audrey Troutt
@auditty
*** â‰ˆ 20-70% of time doing a project spent learning
*** Learning has social component
Chunking info doesn't matter if you can't communicate it to someone
*** Teaching as a component for social learning
*** Ashley Johnson talk about High Performance Virtual Teams
*** Solving problems is fun
What most of us got into this industry to do
*** Learning a New Process
*** Iteration / Reflection cycle
A means to learn as a group
*** Learning a New Tool
*** Hackathons featuring an expert in a framework/language
*** Learning a New Problem
*** Pair exchange program with another company
*** Protected learning time
Company will pay the price of learning one way or another
*** General learning activity principles
**** Clarify goals
**** Apply new knowledge immediately
**** Protect learning time
**** Include everyone
**** Iterate and reflect
*** bluejeans screensharing
*** Whiteboard with camera pointed at it
** Infrastructure as Code
*** Jearvon Dharrie
*** Applying Software Engineering Principles to your Infrastructure
*** Tools don't fix the problem
Ansible and Chef seem attractive, but don't prevent you from using the
same practices
*** Definition
[[https://en.m.wikipedia.org/wiki/Infrastructure_as_Code]]
*** Version control provides audit trail and compliance
*** Style guide
*** Infrastructure needs refactoring too
*** How do you get buy in for refactoring
**** Martin Fowler suggests do it and don't tell them
**** If you touch it leave it better than you found it
*** Red, green, refactor; even with boxes running NGINX
*** Always consider cost / benefits with testing
*** What tool do you use to test Ansible scripts?
**** Ansible Playbooks
**** Server spec for Ansible
**** Nspec for chef
**** test kitchen for ansible
*** Outside in testing Gary Bernhardt
https://www.youtube.com/watch?v=tdNnN5yTIeM
*** Blackbox testing against staging
*** CLI interface to control publishing in pipeline
*** Need champion, e.g. to transition from ansible to Docker kubernetes
* Meeting <2017-02-28 Tue>
** ETE Opportunity Scholarship
** A Better Technical Interview
*** Sam Jones
*** Test Double
*** Collective interview
You don't work in isolation.

Don't interview in isolation.
*** Elements of a good interview
**** Highlight Candidate Experience
**** Reflect the Job
**** Give Feedback
*** If you value communication state it
Don't just evaluate communication skills without conveying
expectations.
*** Solidify company values
To try to reduce influence of subjective impressions on interviewer.
*** Reframe No as Not Yet
*** Create an advocate for the candidate
**** Clarifies hiring process and values of company
**** Serves as intermediary among interviewers
Try to cut down on [[https://en.m.wikipedia.org/wiki/Anchoring][anchoring bias]]
*** Learn something from a candidate when pairing

** Crafted hiring for diversity
*** Christopher Litsinger
*** @x0pherl
*** Goal to hire the most diverse team possible
*** Empathy among team makes team good at solving problems
*** Bias from all-men airbag design teams
*** Pipeline problem
Greater than half of people coming out of US colleges and universities
Computer Science programs are white men.
**** Most underrepresented population is black females
**** H1-B visas bring in talent from rest of world
*** What can industry do to include more people
*** Hiring may be some of the source of the problem
*** Interviewing.io
**** Interview practicing platform
**** [[http://blog.interviewing.io/][Blog]]
*** Can't measure false negatives in interview process
*** Methods of interviewing doesnt predict performance on the job
*** Check the facade you present as if doing opposition research on yourself
*** Contradictory hiring requirements
Gender disparity in self-selection to apply for these jobs
**** Apply like a mediocre white guy
*** Avoid saying things are requirements if they aren't requirements
**** Bring 2 of the following 5 skills
**** s/requirement/preferred qualification/
*** Be clear and explicit
At the bottom of every job interview:

#+BEGIN_QUOTE
We are actively seeking a diverse set of candidates to join our team,
if you're not sure if you qualify for this position please err on the
side of applying
#+END_QUOTE
*** Define values
**** Empathy
**** Ability to learn
**** Enthusiasm for the job
**** Raw technical skills
*** Craft an interview process based on those values
*** Resumes are a bias quagmire
*** Added psychological test for empathy
*** Tests on candidates' own system; open internet
*** Pairing in interview process selects for people who have paired before
*** Blind alley code exercise
**** Get candidate to have to check ego and consider alternative solution
*** Wide-band delphi estimation for candidate evaluation
**** Score against identified values
**** +2: I will be strong advocate for hiring this candidate
**** +1: I'm ok if we hire this candidate
**** -1: I'm ok if we don't hire this candidate
**** -2: I will be strong advocate for not hiring this candidate
**** No neutral value!
People will tend to pick the neutral value.  You want their feedback
on the candidate they interviewed, so don't let them pick a neutral
value.
*** Made mistakes
*** Recruiting through twitter or personal networks
*** Target for diversity?
**** Goal: build the most diverse team in Comcast
**** Can't really measure outcome
*** Results of increasing diversity
**** Some more conversations about accessibility
**** How do you make an API accessible?
