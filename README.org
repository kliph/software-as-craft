* Meeting <2017-01-31 Tue>
** Learn Better Together
*** Audrey Troutt
@auditty
*** â‰ˆ 20-70% of time doing a project spent learning
*** Learning has social component
Chunking info doesn't matter if you can't communicate it to someone
*** Teaching as a component for social learning
*** Ashley Johnson talk about High Performance Virtual Teams
*** Solving problems is fun
What most of us got into this industry to do
*** Learning a New Process
*** Iteration / Reflection cycle
A means to learn as a group
*** Learning a New Tool
*** Hackathons featuring an expert in a framework/language
*** Learning a New Problem
*** Pair exchange program with another company
*** Protected learning time
Company will pay the price of learning one way or another
*** General learning activity principles
**** Clarify goals
**** Apply new knowledge immediately
**** Protect learning time
**** Include everyone
**** Iterate and reflect
*** bluejeans screensharing
*** Whiteboard with camera pointed at it
** Infrastructure as Code
*** Jearvon Dharrie
*** Applying Software Engineering Principles to your Infrastructure
*** Tools don't fix the problem
Ansible and Chef seem attractive, but don't prevent you from using the
same practices
*** Definition
[[https://en.m.wikipedia.org/wiki/Infrastructure_as_Code]]
*** Version control provides audit trail and compliance
*** Style guide
*** Infrastructure needs refactoring too
*** How do you get buy in for refactoring
**** Martin Fowler suggests do it and don't tell them
**** If you touch it leave it better than you found it
*** Red, green, refactor; even with boxes running NGINX
*** Always consider cost / benefits with testing
*** What tool do you use to test Ansible scripts?
**** Ansible Playbooks
**** Server spec for Ansible
**** Nspec for chef
**** test kitchen for ansible
*** Outside in testing Gary Bernhardt
*** Blackbox testing against staging
*** CLI interface to control publishing in pipeline
*** Need champion, e.g. to transition from ansible to Docker kubernetes
